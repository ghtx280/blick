const obj={bg:{prop:"background-color",defVal:""},m:{prop:"margin",defVal:"px"},mt:{prop:"margin-top",defVal:"px"},mr:{prop:"margin-right",defVal:"px"},mb:{prop:"margin-bottom",defVal:"px"},ml:{prop:"margin-left",defVal:"px"},p:{prop:"padding",defVal:"px"},pt:{prop:"padding-top",defVal:"px"},pr:{prop:"padding-right",defVal:"px"},pb:{prop:"padding-bottom",defVal:"px"},pl:{prop:"padding-left",defVal:"px"},c:{prop:"color",defVal:""},fsz:{prop:"font-size",defVal:"px"},round:{prop:"border-radius",defVal:"px"},rotate:{prop:"rotate",defVal:"deg"},hue:{prop:"--hue",defVal:"deg"},w:{prop:"width",defVal:"px"},h:{prop:"height",defVal:"px"},b:{prop:"border-width",defVal:""},bt:{prop:"border-top-width",defVal:"px"},br:{prop:"border-right-width",defVal:"px"},bb:{prop:"border-bottom-width",defVal:"px"},bl:{prop:"border-left-width",defVal:"px"},bc:{prop:"border-color",defVal:""}},st=document.createElement("style");document.head.append(st);let newRule,done;function setStyle(){Object.entries(obj).map(([a,b])=>{document.querySelectorAll(`[class*="${a}-"]`).forEach(c=>{c.classList.forEach(c=>{if(c.startsWith(a)){let d=c.split("-")[1];newRule=d.includes("+")?`[class~="${a}-${d}"]{${b.prop}:${d.split("+").map(a=>a+b.defVal).join(" ")};}`:`[class~="${a}-${d}"]{${b.prop}:${d}${b.defVal};}`,!st.textContent.includes(newRule)&&newRule&&(st.textContent+=newRule)}})})}),document.querySelectorAll(`[flex],[grid]`).forEach(a=>{Array.from(a.attributes).forEach(a=>{a.value.split(" ").forEach(a=>{done=a.slice(1,100),a.startsWith("y")?newRule=`[flex~="y${done}"],[grid~="y${done}"]{column-gap:${done}px;}`:a.startsWith("x")?newRule=`[flex~="x${done}"],[grid~="x${done}"]{row-gap:${done}px;}`:(done=parseFloat(a),done&&(newRule=`[flex~="${done}"],[grid~="${done}"]{gap:${done}px;}`)),!st.textContent.includes(newRule)&&newRule&&(st.textContent+=newRule)})})}),document.querySelectorAll(`[text]`).forEach(a=>{Array.from(a.attributes).forEach(a=>{a.value.split(" ").forEach(a=>{done=parseFloat(a),done&&(newRule=`[text~="${done}"]{font-size:${done}px;}`),!st.textContent.includes(newRule)&&newRule&&(st.textContent+=newRule)})})})}new MutationObserver(setStyle).observe(document.documentElement,{attributes:!0,attributeFilter:["class","flex","grid","hover","text"],childList:!0,subtree:!0});